# Generated by Django 3.0.4 on 2021-08-28 07:57

import bizcred.helpers
import bizcred.validators
from django.conf import settings
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org_name', models.CharField(max_length=30)),
                ('org_website', models.CharField(blank=True, max_length=100, null=True, verbose_name='Organization Website')),
                ('org_type', models.SmallIntegerField(choices=[('', 'Select'), (1, 'Llp'), (2, 'Pvt Ltd'), (3, 'Ltd'), (4, 'Bank'), (5, 'Nbfc'), (6, 'Partnership')])),
                ('company_register_no', models.CharField(blank=True, max_length=21, null=True, validators=[django.core.validators.RegexValidator(message='Invalid CIN.', regex='^[LU][0-9]{5}[A-Z]{2}[12][0-9]{3}[P][TL][C][0-9]{6}$')], verbose_name='CIN/LLPIN <small class=asterisk>*</small>')),
                ('soc', models.CharField(blank=True, max_length=20, null=True, verbose_name='SOC <small class=asterisk>*</small>')),
                ('year', models.SmallIntegerField(choices=[(1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021)])),
                ('month', models.SmallIntegerField(choices=[('', 'Select'), (1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')])),
                ('reject_reason', models.TextField(blank=True, default='', null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VeloceScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('veloce_rating', models.SmallIntegerField(choices=[('', 'Select'), (1, 'V1'), (2, 'V2'), (3, 'V3'), (4, 'V4'), (5, 'V5')])),
                ('start', models.CharField(max_length=10)),
                ('end', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='VeloceScoreMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crif_score', models.DecimalField(blank=True, decimal_places=2, max_digits=22, null=True)),
                ('mca_default', models.BooleanField(default=False)),
                ('gst_default', models.BooleanField(default=False)),
                ('criminal_civil_case', models.BooleanField(default=False)),
                ('is_address_checked', models.BooleanField(default=False)),
                ('own_house', models.BooleanField(default=False)),
                ('de_ratio', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('current_ratio', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('ebitda_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('int_cov_ratio', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Interest Coverage Ratio')),
                ('credit_rating', models.CharField(blank=True, max_length=5, null=True)),
                ('is_pan_verified', models.BooleanField(default=False)),
                ('is_gst_verified', models.BooleanField(default=False)),
                ('is_adhaar_verified', models.BooleanField(default=False)),
                ('cheque_bounced', models.BooleanField(default=False)),
                ('bank_comfort_letter', models.BooleanField(default=False)),
                ('credit_manage_score', models.DecimalField(blank=True, decimal_places=2, max_digits=22, null=True)),
                ('total_score', models.DecimalField(blank=True, decimal_places=2, max_digits=22, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VeloceScoreApprovalMatrix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dealer_finance_amount', models.IntegerField()),
                ('borrower_finance_amount', models.IntegerField()),
                ('tenure_months', models.CharField(max_length=2, verbose_name='Tenure(months)')),
                ('rate_of_interest', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Rate of Interest(%)')),
                ('processing_fees', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Processing Fees(%)')),
                ('veloce_score', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bizcred.VeloceScore')),
            ],
        ),
        migrations.CreateModel(
            name='SanctionedLoan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sanction_date', models.DateField(blank=True, null=True)),
                ('loan_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('loan_tenure', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('loan_emi', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('letter', models.FileField(blank=True, null=True, upload_to=bizcred.helpers.UploadPath('loan_sanction_letter'), validators=[bizcred.validators.file_validator], verbose_name='Sanction Letter')),
                ('lender_noc', models.FileField(blank=True, null=True, upload_to=bizcred.helpers.UploadPath('lender_noc'), validators=[bizcred.validators.file_validator], verbose_name='Lender Bank NOC, If Loan is Fully Paid up')),
                ('is_complete', models.BooleanField(default=False)),
                ('reject_reason', models.TextField(blank=True, default='', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Invalid phone number.', regex='^[0-9]{10}$')])),
                ('otp', models.CharField(blank=True, default='', max_length=6)),
                ('is_complete', models.BooleanField(default=False)),
                ('expiry_date', models.DateTimeField()),
                ('reject_reason', models.TextField(blank=True, default='', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pan_number', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid PAN number.', regex='^[A-Z]{3}[PCHABGJLFT][A-Z][0-9]{4}[A-Z]$')])),
                ('pan_card', models.FileField(upload_to=bizcred.helpers.UploadPath('pan_card'), validators=[bizcred.validators.file_validator])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Metadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_type', models.SmallIntegerField(choices=[('', 'Select'), (1, 'Individual'), (2, 'Institution'), (3, 'Lender')], default=1)),
                ('org_name', models.CharField(blank=True, max_length=50, null=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('changelog', models.IntegerField(default=0)),
                ('completion', models.IntegerField(default=0)),
                ('profile_reviewed', models.IntegerField(default=0)),
                ('profile_verified', models.IntegerField(default=0)),
                ('is_crif_generated', models.BooleanField(default=False)),
                ('reject_reason', models.TextField(default='')),
                ('password_code', models.TextField(blank=True, default='')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LevelEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.SmallIntegerField()),
                ('is_approved', models.BooleanField(default=False)),
                ('sent_time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LenderDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banking_license_no', models.CharField(max_length=20, verbose_name='Banking License No.')),
                ('banking_license', models.FileField(upload_to=bizcred.helpers.UploadPath('banking_license'), validators=[bizcred.validators.file_validator], verbose_name='BANKING LICENSE <small class=asterisk>*</small>')),
                ('noc', models.FileField(upload_to=bizcred.helpers.UploadPath('noc'), validators=[bizcred.validators.file_validator], verbose_name='RBI NOC <small class=asterisk>*</small>')),
                ('manager_remark', models.TextField(blank=True, null=True, verbose_name="Lender's Remark")),
                ('reject_reason', models.TextField(blank=True, default='', null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IncomeTaxReturn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(choices=[('2020-2021', '2020-2021'), ('2019-2020', '2019-2020'), ('2018-2019', '2018-2019'), ('2017-2018', '2017-2018')], max_length=10)),
                ('tax_return', models.FileField(upload_to=bizcred.helpers.UploadPath('itr'), validators=[bizcred.validators.file_validator], verbose_name='Tax Return <small class=asterisk>*</small>')),
                ('is_complete', models.BooleanField(default=False)),
                ('reject_reason', models.TextField(blank=True, default='', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Identification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('din', models.CharField(blank=True, max_length=8, null=True, validators=[django.core.validators.RegexValidator(message='DIN should have exactly 8 digits.', regex='^[0-9]{8}$')], verbose_name='DIN (if director anywhere)')),
                ('pan_number', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid PAN number.', regex='^[A-Z]{3}[PCHABGJLFT][A-Z][0-9]{4}[A-Z]$')])),
                ('pan_card', models.FileField(upload_to=bizcred.helpers.UploadPath('pan_card'), validators=[bizcred.validators.file_validator], verbose_name='PAN Card <small class=asterisk>*</small>')),
                ('aadhar_number', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Aadhaar No. should have exactly 12 digits.', regex='^[0-9]{12}$')])),
                ('aadhar_card', models.FileField(upload_to=bizcred.helpers.UploadPath('aadhar_card'), validators=[bizcred.validators.file_validator], verbose_name='Aadhaar Card <small class=asterisk>*</small>')),
                ('gst_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Invalid GST Number.', regex='^[0-9][1-9][A-Z]{3}[PCHABGJLFT][A-Z][0-9]{4}[A-Z][0-9][Z][a-zA-Z0-9]$')])),
                ('gst_proof', models.FileField(blank=True, null=True, upload_to=bizcred.helpers.UploadPath('gst'), validators=[bizcred.validators.file_validator])),
                ('passport_no', models.CharField(blank=True, max_length=8, null=True, validators=[django.core.validators.RegexValidator(message='Invalid Passport No.', regex='^(?!^0+$)[a-zA-Z0-9]{3,20}$')])),
                ('passport_expiry_date', models.DateField(blank=True, null=True)),
                ('passport', models.FileField(blank=True, help_text='Note : Please provide information for minimum any 1 out of Passport OR Driving License OR Voter id OR Utility Bill.', null=True, upload_to=bizcred.helpers.UploadPath('paasport'), validators=[bizcred.validators.file_validator], verbose_name='Passport')),
                ('driving_license_no', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Invalid Driving License No.', regex='^[A-Z]{2}[0-9]{13}$')])),
                ('driving_license_expiry_date', models.DateField(blank=True, null=True)),
                ('driving_license', models.FileField(blank=True, help_text='Note : Please provide information for minimum any 1 out of Passport OR Driving License OR Voter id OR Utility Bill.', null=True, upload_to=bizcred.helpers.UploadPath('driving_license'), validators=[bizcred.validators.file_validator], verbose_name='Driving Licence')),
                ('voter_id', models.FileField(blank=True, help_text='Note : Please provide information for minimum any 1 out of Passport OR Driving License OR Voter id OR Utility Bill.', null=True, upload_to=bizcred.helpers.UploadPath('voter_id'), validators=[bizcred.validators.file_validator], verbose_name='Voter ID')),
                ('utility_bill', models.FileField(blank=True, help_text='Note : Please provide information for minimum any 1 out of Passport OR Driving License OR Voter id OR Utility Bill.', null=True, upload_to=bizcred.helpers.UploadPath('utility_bill'), validators=[bizcred.validators.file_validator], verbose_name='Utility Bill')),
                ('reject_reason', models.TextField(blank=True, default='', null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GstRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gst_number', models.CharField(max_length=15, unique=True)),
                ('gst_proof', models.FileField(upload_to=bizcred.helpers.UploadPath('gst'), validators=[bizcred.validators.file_validator])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='General',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('father_husband_no', models.CharField(blank=True, max_length=50, null=True)),
                ('org_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Organization Name')),
                ('pos_in_company', models.CharField(blank=True, max_length=40, null=True)),
                ('birthdate', models.DateField()),
                ('gender', models.IntegerField(choices=[('', 'Select'), (1, 'Male'), (2, 'Female'), (3, 'Other')])),
                ('marital_status', models.SmallIntegerField(choices=[('', 'Select'), (1, 'Single'), (2, 'Married'), (3, 'Divorced'), (4, 'Widowed')])),
                ('dependents', models.CharField(blank=True, max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Dependents should be positive numbers.', regex='^[0-9]{1}$')])),
                ('net_monthly_income', models.SmallIntegerField(choices=[('', 'Select'), (1, 'Between 10k And 25k'), (2, 'Between 25k And 50k'), (3, 'Between 50k And 100k'), (4, 'Above 100k')])),
                ('education_level', models.SmallIntegerField(choices=[('', 'Select'), (1, 'High School'), (2, 'Diploma'), (3, 'Graduate'), (4, 'Post Graduate'), (5, 'Professional')])),
                ('associated_professional_institute', models.CharField(blank=True, max_length=50, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Registration / Membership No')),
                ('reject_reason', models.TextField(blank=True, default='', null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceOfferDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sanction_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('lender_interest_rate', models.DecimalField(decimal_places=2, max_digits=7, verbose_name="Lender's rate of interest")),
                ('veloce_margin', models.DecimalField(decimal_places=2, max_digits=7)),
                ('effective_interest_rate', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='Effective rate of interest')),
                ('emi_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('overdue_interest_rate', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Overdue rate of interest')),
                ('veloce_margin_payer', models.SmallIntegerField(choices=[('', 'Select'), (1, 'Lender'), (2, 'Borrower')])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmploymentDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employment_industry', models.SmallIntegerField(choices=[('', 'Select'), (1, 'Agriculture / Forestry / Fishing'), (2, 'Metals And Minerals'), (3, 'Energy And Utilities'), (4, 'Construction - Industrial Facilities And Infrastructure'), (6, 'Aerospace And Defense'), (7, 'Automotive And Parts Mfg'), (8, 'Biotechnology / Pharmaceuticals'), (9, 'Chemicals / Petro - Chemicals'), (10, 'Consumer Packaged Goods Manufacturing'), (11, 'Electronics, Components, And Semiconductor Mfg'), (12, 'Manufacturing - Other'), (13, 'Printing And Publishing'), (14, 'Clothing And Textile Manufacturing'), (15, 'Wholesale Trade / Import - Export'), (17, 'Retail'), (18, 'Travel, Transportation And Tourism'), (19, 'Transport And Storage - Materials'), (20, 'Internet Services'), (21, 'Broadcasting, Music, And Film'), (22, 'Telecommunications Services'), (23, 'Banking'), (24, 'Insurance'), (26, 'Real Estate / Property Management'), (27, 'Rental Services'), (28, 'Accounting And Auditing Services'), (29, 'Advertising And Pr Services'), (30, 'Architectural And Design Services'), (31, 'Management Consulting Services'), (32, 'Computer Hardware'), (33, 'Computer Software'), (34, 'Legal Services'), (37, 'Waste Management'), (38, 'Education'), (39, 'Healthcare Services'), (42, 'Performing And Fine Arts'), (43, 'Sports And Physical Recreation'), (44, 'Hotels And Lodging'), (45, 'Restaurant / Food Services'), (46, 'Staffing / Employment Agencies'), (47, 'Nonprofit Charitable Organizations'), (48, 'Personal And Household Services'), (50, 'Government And Military'), (74, 'Security And Surveillance'), (75, 'Automotive Sales And Repair Services'), (76, 'Business Services - Other'), (77, 'Information Technology Services'), (78, 'Construction - Residential And Commercial / Office'), (79, 'Engineering Services'), (80, 'Entertainment Venues And Theaters'), (81, 'Financial Services'), (82, 'Food And Beverage Production'), (83, 'Marine Mfg And Services'), (84, 'Medical Devices And Supplies'), (85, 'Others')])),
                ('company_name', models.CharField(blank=True, max_length=30, null=True)),
                ('designation', models.CharField(blank=True, max_length=30, null=True)),
                ('working_years_in_company', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('work_experience', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('appointment_letter', models.FileField(blank=True, null=True, upload_to=bizcred.helpers.UploadPath('appointment'), validators=[bizcred.validators.file_validator], verbose_name='Appointment Letter <small class=asterisk>*</small>')),
                ('salary_slip', models.FileField(blank=True, null=True, upload_to=bizcred.helpers.UploadPath('salary_slip'), validators=[bizcred.validators.file_validator], verbose_name='Salary Slip [Last 6 Month] <small class=asterisk>*</small>')),
                ('is_auto_gen', models.BooleanField(default=False)),
                ('reject_reason', models.TextField(blank=True, default='', null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessFinancial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finance_year', models.CharField(max_length=10)),
                ('turnover_revenue', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('profit_befor_interest', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('interest_expense', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('depreciate', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('tax', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('profite_after_tax', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('capital_reserves', models.IntegerField()),
                ('total_borrowing', models.IntegerField()),
                ('current_assets', models.IntegerField()),
                ('current_liablities', models.IntegerField()),
                ('balance_sheet', models.FileField(upload_to=bizcred.helpers.UploadPath('bs'), validators=[bizcred.validators.file_validator], verbose_name='Balance Sheet Report <small class=asterisk>*</small>')),
                ('pnl_statement', models.FileField(upload_to=bizcred.helpers.UploadPath('pnl'), validators=[bizcred.validators.file_validator], verbose_name='P&L Statement <small class=asterisk>*</small>')),
                ('certified_audit_report', models.FileField(blank=True, null=True, upload_to=bizcred.helpers.UploadPath('car'), validators=[bizcred.validators.file_validator], verbose_name='Certified Audit Report')),
                ('is_complete', models.BooleanField(default=False)),
                ('is_auto_gen', models.BooleanField(default=False)),
                ('reject_reason', models.TextField(blank=True, default='', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BankStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.SmallIntegerField(choices=[(2020, 2020), (2021, 2021)])),
                ('month', models.TextField(max_length=255)),
                ('statement', models.FileField(upload_to=bizcred.helpers.UploadPath('bank_statement'), validators=[bizcred.validators.file_validator], verbose_name='Bank Statement <small class=asterisk>*</small>')),
                ('is_complete', models.BooleanField(default=False)),
                ('reject_reason', models.TextField(blank=True, default='', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ifsc_code', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='IFSC should be an 11-digit alphanumeric code.', regex='^[a-zA-Z0-9]{11}$')])),
                ('branch_name', models.CharField(max_length=100)),
                ('bank_name', models.CharField(max_length=100)),
                ('bank_address', models.CharField(max_length=200)),
                ('bank_acc_type', models.SmallIntegerField(default=1, verbose_name='Account Type')),
                ('account_no', models.CharField(max_length=20, verbose_name='Bank Account No.')),
                ('branch_manager_name', models.CharField(max_length=50, verbose_name='Branch Manager Name')),
                ('branch_manager_email', models.EmailField(max_length=50, verbose_name='Branch Manager Email')),
                ('branch_manager_phone_number', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Invalid phone number.', regex='^[0-9]{10}$')], verbose_name='Branch Manager Mobile')),
                ('cancel_cheque', models.FileField(upload_to=bizcred.helpers.UploadPath('cancel_cheque'), validators=[bizcred.validators.file_validator], verbose_name='Cancel Cheque <small class=asterisk>*</small>')),
                ('reject_reason', models.TextField(blank=True, default='', null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='B2CReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orderid', models.IntegerField()),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AuthAdditionalCompanyDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pan_number', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid PAN number.', regex='^[A-Z]{3}[PCHABGJLFT][A-Z][0-9]{4}[A-Z]$')])),
                ('pan_card', models.FileField(upload_to=bizcred.helpers.UploadPath('pan_card'), validators=[bizcred.validators.file_validator], verbose_name='Pan Card <small class=asterisk>*</small>')),
                ('aadhar_number', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Aadhaar No. should have exactly 12 digits.', regex='^[0-9]{12}$')])),
                ('aadhar_card', models.FileField(upload_to=bizcred.helpers.UploadPath('aadhar_card'), validators=[bizcred.validators.file_validator], verbose_name='Aadhaar Card <small class=asterisk>*</small>')),
                ('din_number', models.CharField(max_length=12)),
                ('reject_reason', models.TextField(blank=True, default='', null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_number', models.CharField(max_length=100)),
                ('street_address', models.CharField(max_length=100)),
                ('tel_number', models.CharField(blank=True, max_length=11, null=True)),
                ('pin_code', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator(regex='^[0-9]{6}$')])),
                ('city', models.CharField(max_length=40)),
                ('state', models.SmallIntegerField(choices=[('', 'Select'), (1, 'Andaman And Nicobar Islands'), (2, 'Andhra Pradesh'), (3, 'Arunachal Pradesh'), (4, 'Assam'), (5, 'Bihar'), (6, 'Chandigarh'), (7, 'Chhattisgarh'), (8, 'Dadra And Nagar Haveli'), (9, 'Daman And Diu'), (10, 'Delhi'), (11, 'Goa'), (12, 'Gujarat'), (13, 'Haryana'), (14, 'Himachal Pradesh'), (15, 'Jammu And Kashmir'), (16, 'Jharkhand'), (17, 'Karnataka'), (18, 'Kerala'), (19, 'Ladakh'), (20, 'Lakshadweep'), (21, 'Madhya Pradesh'), (22, 'Maharashtra'), (23, 'Manipur'), (24, 'Meghalaya'), (25, 'Mizoram'), (26, 'Nagaland'), (27, 'Orissa'), (28, 'Pondicherry'), (29, 'Punjab'), (30, 'Rajasthan'), (31, 'Sikkim'), (32, 'Tamil Nadu'), (33, 'Telangana'), (34, 'Tripura'), (35, 'Uttar Pradesh'), (36, 'Uttarakhand'), (37, 'West Bengal')])),
                ('effective_year', models.SmallIntegerField(choices=[(1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021)], verbose_name='Effective Since Year')),
                ('effective_month', models.SmallIntegerField(choices=[('', 'Select'), (1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')], verbose_name='Effective Month')),
                ('proof', models.FileField(upload_to=bizcred.helpers.UploadPath('address_proof'), validators=[bizcred.validators.file_validator], verbose_name='Address Proof <small class=asterisk>*</small>')),
                ('reject_reason', models.TextField(blank=True, default='', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdditionalCompanyDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pan_number', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid PAN number.', regex='^[A-Z]{3}[PCHABGJLFT][A-Z][0-9]{4}[A-Z]$')])),
                ('pan_card', models.FileField(upload_to=bizcred.helpers.UploadPath('pan_card'), validators=[bizcred.validators.file_validator], verbose_name='Pan Card  <small class=asterisk>*</small>')),
                ('gst_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Invalid GST Number.', regex='^[0-9][1-9][A-Z]{3}[PCHABGJLFT][A-Z][0-9]{4}[A-Z][0-9][Z][a-zA-Z0-9]$')])),
                ('gst_proof', models.FileField(blank=True, null=True, upload_to=bizcred.helpers.UploadPath('gst'), validators=[bizcred.validators.file_validator], verbose_name='GSTIN No')),
                ('udyog_aadhar_number', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid Udyam Registration No.', regex='^[A-Z]{5}[A-Z]{2}[0-9]{2}[0-9]{7}$')], verbose_name='Udyam Registration No.  <small class=asterisk>*</small>')),
                ('udyog_aadhar_card', models.FileField(upload_to=bizcred.helpers.UploadPath('udyog_aadhar'), validators=[bizcred.validators.file_validator], verbose_name='Udyam Registration Certificate  <small class=asterisk>*</small>')),
                ('shop_license', models.FileField(blank=True, null=True, upload_to=bizcred.helpers.UploadPath('shop_license'), validators=[bizcred.validators.file_validator])),
                ('rent_agreement', models.FileField(upload_to=bizcred.helpers.UploadPath('rent_agreement'), validators=[bizcred.validators.file_validator], verbose_name='Rent agreement or ownership document <small class=asterisk>*</small>')),
                ('constitution_docs', models.FileField(upload_to=bizcred.helpers.UploadPath('constitution_doc'), validators=[bizcred.validators.file_validator], verbose_name='Constitution Docs [MOA/AOA/Partnership Deed/LLP Agreement/Trust Deed/Bye Laws etc.] <small class=asterisk>*</small> ')),
                ('authorization_resolution', models.FileField(upload_to=bizcred.helpers.UploadPath('resolution'), validators=[bizcred.validators.file_validator], verbose_name='Authorization Resolution <small class=asterisk>*</small>')),
                ('shareholder_list', models.FileField(blank=True, null=True, upload_to=bizcred.helpers.UploadPath('shareholder'), validators=[bizcred.validators.file_validator], verbose_name='List of shareholders/members')),
                ('reject_reason', models.TextField(blank=True, default='', null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Aadhar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aadhar_number', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Aadhaar No. should have exactly 12 digits.', regex='^[0-9]{12}$')])),
                ('aadhar_card', models.FileField(upload_to=bizcred.helpers.UploadPath('aadhar_card'), validators=[bizcred.validators.file_validator])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RelatedCompanyInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('related_website', models.CharField(blank=True, max_length=100, null=True, verbose_name='Related Company website')),
                ('related_company', models.CharField(max_length=100, verbose_name='Related Company / Firm Name')),
                ('related_company_address', models.CharField(blank=True, max_length=150, null=True, verbose_name='Related companies address')),
                ('related_company_gstin', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Invalid GST Number.', regex='^[0-9][1-9][A-Z]{3}[PCHABGJLFT][A-Z][0-9]{4}[A-Z][0-9][Z][a-zA-Z0-9]$')], verbose_name='Related companies gstin (Optional)')),
                ('is_complete', models.BooleanField(default=False)),
                ('reject_reason', models.TextField(blank=True, default='', null=True)),
                ('company_details', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bizcred.CompanyDetails')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('related_company', 'company_details')},
            },
        ),
    ]
